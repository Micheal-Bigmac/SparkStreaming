// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/proto/UnreportedGps.proto

package com.sxp.task.protobuf.generated;

public final class UnreportedGpsInfo {
  private UnreportedGpsInfo() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface UnreportedGpsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:UnreportedGps)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 ID = 1;</code>
     */
    boolean hasID();
    /**
     * <code>required int64 ID = 1;</code>
     */
    long getID();

    /**
     * <code>required int64 TackID = 2;</code>
     */
    boolean hasTackID();
    /**
     * <code>required int64 TackID = 2;</code>
     */
    long getTackID();

    /**
     * <code>required string PlateName = 3;</code>
     */
    boolean hasPlateName();
    /**
     * <code>required string PlateName = 3;</code>
     */
    java.lang.String getPlateName();
    /**
     * <code>required string PlateName = 3;</code>
     */
    com.google.protobuf.ByteString
        getPlateNameBytes();

    /**
     * <code>required int32 PlateColor = 4;</code>
     */
    boolean hasPlateColor();
    /**
     * <code>required int32 PlateColor = 4;</code>
     */
    int getPlateColor();

    /**
     * <code>required int64 GroupID = 5;</code>
     */
    boolean hasGroupID();
    /**
     * <code>required int64 GroupID = 5;</code>
     */
    long getGroupID();
  }
  /**
   * Protobuf type {@code UnreportedGps}
   *
   * <pre>
   *TabelNameï¼š T_MONSENDFAILGPS
   *DataType: 100013
   * </pre>
   */
  public static final class UnreportedGps extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:UnreportedGps)
      UnreportedGpsOrBuilder {
    // Use UnreportedGps.newBuilder() to construct.
    private UnreportedGps(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UnreportedGps(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UnreportedGps defaultInstance;
    public static UnreportedGps getDefaultInstance() {
      return defaultInstance;
    }

    public UnreportedGps getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UnreportedGps(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              iD_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tackID_ = input.readInt64();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              plateName_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              plateColor_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              groupID_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return UnreportedGpsInfo.internal_static_UnreportedGps_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return UnreportedGpsInfo.internal_static_UnreportedGps_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              UnreportedGpsInfo.UnreportedGps.class, UnreportedGpsInfo.UnreportedGps.Builder.class);
    }

    public static com.google.protobuf.Parser<UnreportedGps> PARSER =
        new com.google.protobuf.AbstractParser<UnreportedGps>() {
      public UnreportedGps parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnreportedGps(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UnreportedGps> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long iD_;
    /**
     * <code>required int64 ID = 1;</code>
     */
    public boolean hasID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 ID = 1;</code>
     */
    public long getID() {
      return iD_;
    }

    public static final int TACKID_FIELD_NUMBER = 2;
    private long tackID_;
    /**
     * <code>required int64 TackID = 2;</code>
     */
    public boolean hasTackID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 TackID = 2;</code>
     */
    public long getTackID() {
      return tackID_;
    }

    public static final int PLATENAME_FIELD_NUMBER = 3;
    private java.lang.Object plateName_;
    /**
     * <code>required string PlateName = 3;</code>
     */
    public boolean hasPlateName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string PlateName = 3;</code>
     */
    public java.lang.String getPlateName() {
      java.lang.Object ref = plateName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          plateName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string PlateName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPlateNameBytes() {
      java.lang.Object ref = plateName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        plateName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLATECOLOR_FIELD_NUMBER = 4;
    private int plateColor_;
    /**
     * <code>required int32 PlateColor = 4;</code>
     */
    public boolean hasPlateColor() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 PlateColor = 4;</code>
     */
    public int getPlateColor() {
      return plateColor_;
    }

    public static final int GROUPID_FIELD_NUMBER = 5;
    private long groupID_;
    /**
     * <code>required int64 GroupID = 5;</code>
     */
    public boolean hasGroupID() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int64 GroupID = 5;</code>
     */
    public long getGroupID() {
      return groupID_;
    }

    private void initFields() {
      iD_ = 0L;
      tackID_ = 0L;
      plateName_ = "";
      plateColor_ = 0;
      groupID_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTackID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPlateName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPlateColor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGroupID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, iD_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, tackID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getPlateNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, plateColor_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, groupID_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, iD_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, tackID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getPlateNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, plateColor_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, groupID_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static UnreportedGpsInfo.UnreportedGps parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UnreportedGpsInfo.UnreportedGps parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UnreportedGpsInfo.UnreportedGps parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UnreportedGpsInfo.UnreportedGps parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UnreportedGpsInfo.UnreportedGps parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static UnreportedGpsInfo.UnreportedGps parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static UnreportedGpsInfo.UnreportedGps parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static UnreportedGpsInfo.UnreportedGps parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static UnreportedGpsInfo.UnreportedGps parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static UnreportedGpsInfo.UnreportedGps parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(UnreportedGpsInfo.UnreportedGps prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code UnreportedGps}
     *
     * <pre>
     *TabelNameï¼š T_MONSENDFAILGPS
     *DataType: 100013
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:UnreportedGps)
        UnreportedGpsInfo.UnreportedGpsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return UnreportedGpsInfo.internal_static_UnreportedGps_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return UnreportedGpsInfo.internal_static_UnreportedGps_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                UnreportedGpsInfo.UnreportedGps.class, UnreportedGpsInfo.UnreportedGps.Builder.class);
      }

      // Construct using UnreportedGpsInfo.UnreportedGps.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        iD_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        tackID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        plateName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        plateColor_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        groupID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return UnreportedGpsInfo.internal_static_UnreportedGps_descriptor;
      }

      public UnreportedGpsInfo.UnreportedGps getDefaultInstanceForType() {
        return UnreportedGpsInfo.UnreportedGps.getDefaultInstance();
      }

      public UnreportedGpsInfo.UnreportedGps build() {
        UnreportedGpsInfo.UnreportedGps result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public UnreportedGpsInfo.UnreportedGps buildPartial() {
        UnreportedGpsInfo.UnreportedGps result = new UnreportedGpsInfo.UnreportedGps(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.iD_ = iD_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tackID_ = tackID_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.plateName_ = plateName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.plateColor_ = plateColor_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.groupID_ = groupID_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof UnreportedGpsInfo.UnreportedGps) {
          return mergeFrom((UnreportedGpsInfo.UnreportedGps)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(UnreportedGpsInfo.UnreportedGps other) {
        if (other == UnreportedGpsInfo.UnreportedGps.getDefaultInstance()) return this;
        if (other.hasID()) {
          setID(other.getID());
        }
        if (other.hasTackID()) {
          setTackID(other.getTackID());
        }
        if (other.hasPlateName()) {
          bitField0_ |= 0x00000004;
          plateName_ = other.plateName_;
          onChanged();
        }
        if (other.hasPlateColor()) {
          setPlateColor(other.getPlateColor());
        }
        if (other.hasGroupID()) {
          setGroupID(other.getGroupID());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasID()) {
          
          return false;
        }
        if (!hasTackID()) {
          
          return false;
        }
        if (!hasPlateName()) {
          
          return false;
        }
        if (!hasPlateColor()) {
          
          return false;
        }
        if (!hasGroupID()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        UnreportedGpsInfo.UnreportedGps parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (UnreportedGpsInfo.UnreportedGps) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long iD_ ;
      /**
       * <code>required int64 ID = 1;</code>
       */
      public boolean hasID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 ID = 1;</code>
       */
      public long getID() {
        return iD_;
      }
      /**
       * <code>required int64 ID = 1;</code>
       */
      public Builder setID(long value) {
        bitField0_ |= 0x00000001;
        iD_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 ID = 1;</code>
       */
      public Builder clearID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        iD_ = 0L;
        onChanged();
        return this;
      }

      private long tackID_ ;
      /**
       * <code>required int64 TackID = 2;</code>
       */
      public boolean hasTackID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 TackID = 2;</code>
       */
      public long getTackID() {
        return tackID_;
      }
      /**
       * <code>required int64 TackID = 2;</code>
       */
      public Builder setTackID(long value) {
        bitField0_ |= 0x00000002;
        tackID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 TackID = 2;</code>
       */
      public Builder clearTackID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tackID_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object plateName_ = "";
      /**
       * <code>required string PlateName = 3;</code>
       */
      public boolean hasPlateName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string PlateName = 3;</code>
       */
      public java.lang.String getPlateName() {
        java.lang.Object ref = plateName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            plateName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string PlateName = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPlateNameBytes() {
        java.lang.Object ref = plateName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          plateName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string PlateName = 3;</code>
       */
      public Builder setPlateName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        plateName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string PlateName = 3;</code>
       */
      public Builder clearPlateName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        plateName_ = getDefaultInstance().getPlateName();
        onChanged();
        return this;
      }
      /**
       * <code>required string PlateName = 3;</code>
       */
      public Builder setPlateNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        plateName_ = value;
        onChanged();
        return this;
      }

      private int plateColor_ ;
      /**
       * <code>required int32 PlateColor = 4;</code>
       */
      public boolean hasPlateColor() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 PlateColor = 4;</code>
       */
      public int getPlateColor() {
        return plateColor_;
      }
      /**
       * <code>required int32 PlateColor = 4;</code>
       */
      public Builder setPlateColor(int value) {
        bitField0_ |= 0x00000008;
        plateColor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 PlateColor = 4;</code>
       */
      public Builder clearPlateColor() {
        bitField0_ = (bitField0_ & ~0x00000008);
        plateColor_ = 0;
        onChanged();
        return this;
      }

      private long groupID_ ;
      /**
       * <code>required int64 GroupID = 5;</code>
       */
      public boolean hasGroupID() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int64 GroupID = 5;</code>
       */
      public long getGroupID() {
        return groupID_;
      }
      /**
       * <code>required int64 GroupID = 5;</code>
       */
      public Builder setGroupID(long value) {
        bitField0_ |= 0x00000010;
        groupID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 GroupID = 5;</code>
       */
      public Builder clearGroupID() {
        bitField0_ = (bitField0_ & ~0x00000010);
        groupID_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:UnreportedGps)
    }

    static {
      defaultInstance = new UnreportedGps(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:UnreportedGps)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_UnreportedGps_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_UnreportedGps_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"src/main/proto/UnreportedGps.proto\"c\n\r" +
      "UnreportedGps\022\n\n\002ID\030\001 \002(\003\022\016\n\006TackID\030\002 \002(" +
      "\003\022\021\n\tPlateName\030\003 \002(\t\022\022\n\nPlateColor\030\004 \002(\005" +
      "\022\017\n\007GroupID\030\005 \002(\003B6\n!com.hsae.task.prot" +
      "obuf.generatedB\021UnreportedGpsInfo"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_UnreportedGps_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_UnreportedGps_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_UnreportedGps_descriptor,
        new java.lang.String[] { "ID", "TackID", "PlateName", "PlateColor", "GroupID", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
